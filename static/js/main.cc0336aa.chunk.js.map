{"version":3,"sources":["images/pic1.jpg","images/pic2.jpg","images/pic3.jpg","images/pic4.jpg","images/pic5.jpg","images/pic6.jpg","images/pic7.jpg","images/pic8.jpg","images/pic9.jpg","images/win.jpg","images/gameover.jpg","Components/Picture.js","Components/SwitchPics.js","Components/Counter.js","Components/YouWon.js","Components/YouLost.js","Components/GameBody.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Picture","id","this","props","url","split","react_default","a","createElement","className","name","src","alt","clicked","onClick","Component","SwitchPics","scramble","_this","whichImages","map","item","key","Components_Picture","React","Counter","gameOver","playAgain","score","length","topScore","YouWon","Win","YouLost","GameOver","scrambleArray","arr","i","j","temp","Math","floor","random","GameBody","state","win","playAgainBtn","Pic0","Pic1","Pic2","Pic3","Pic4","Pic5","Pic6","Pic7","Pic8","pic0","pic1","pic2","pic3","pic4","pic5","pic6","pic7","pic8","event","_this$setState","console","log","includes","target","setState","push","undefined","newArr","Object","defineProperty","Components_Counter","Components_YouWon","Components_YouLost","Components_SwitchPics","App","style","fontWeight","Components_GameBody","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cc0336aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pic1.12265bd9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic2.2860bce3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic3.0c3be32b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic4.d286c5d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic5.f5477d74.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic6.97afc2ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic7.05494c7b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic8.50827dc3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic9.bca63c13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/win.bf865e8e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gameover.91f6354d.jpg\";","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Picture extends Component {\n    render() {\n        const id = this.props.url.split('.')[1]\n        // console.log(this.props.name, this.props.clicked)\n        return (\n            <div className=\"Picture\">\n                <img \n                className='avatar'\n                name={this.props.name}\n                src={this.props.url} \n                alt={id}\n                clicked={this.props.clicked}\n                onClick={this.props.onClick}/>\n            </div>\n        );\n    }\n}\n\nexport default Picture;","import React from 'react';\nimport '../App.css';\nimport Picture from './Picture';\n\nclass SwitchPics extends React.Component {\n    componentDidMount() {\n        this.props.scramble();\n    }\n    render() {\n        // console.log(this.state.whichImages)\n        return (\n            <div className=\"grid-container\">\n                {this.props.whichImages.map(item => (\n                    <div className=\"grid-item\" key={item.key}>\n                        <Picture\n                            name={'pic' + item.key}\n                            url={item.url}\n                            onClick={this.props.scramble}\n                            clicked={this.props['pic' + item.key]}\n                        />\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\n\nexport default SwitchPics;","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Counter extends Component {\n    render() {\n        return (\n            <div className=\"Counter\">\n            {this.props.gameOver ? \n            (<button\n                className='playAgain'\n                onClick={this.props.playAgain}>Play again?</button>) :\n                (<div>\n                <h3 className='current'>Current Score: {this.props.score.length ? this.props.score.length : '0'}</h3>\n                <h3 className='top'>Top Score: {this.props.topScore}</h3>\n                </div>)}\n            </div>\n        );\n    }\n}\n\n\nexport default Counter;","import React, { Component } from 'react';\nimport '../App.css';\nimport Win from '../images/win.jpg'\n\nclass YouWon extends Component {\n    render() {\n        return (\n            <div>\n                <h1 className='gameOverText'>You won!</h1>\n                <img\n                    className='youWon'\n                    src={Win}\n                    alt='You won!' />\n            </div>\n        );\n    }\n}\n\nexport default YouWon;","import React, { Component } from 'react';\nimport '../App.css';\nimport GameOver from '../images/gameover.jpg'\n\nclass YouLost extends Component {\n    render() {\n        return (\n            <div>\n                <h1 className='gameOverText'>Game over!</h1>\n                <img\n                    className='gameOver'\n                    src={GameOver}\n                    alt='Game over' />\n            </div>\n        );\n    }\n}\n\nexport default YouLost;","import React, { Component } from 'react';\nimport '../App.css';\nimport SwitchPics from './SwitchPics';\nimport Counter from './Counter';\nimport Pic0 from '../images/pic1.jpg';\nimport Pic1 from '../images/pic2.jpg';\nimport Pic2 from '../images/pic3.jpg';\nimport Pic3 from '../images/pic4.jpg';\nimport Pic4 from '../images/pic5.jpg';\nimport Pic5 from '../images/pic6.jpg';\nimport Pic6 from '../images/pic7.jpg';\nimport Pic7 from '../images/pic8.jpg';\nimport Pic8 from '../images/pic9.jpg';\nimport YouWon from './YouWon'\nimport YouLost from './YouLost'\n\nconst scrambleArray = (arr) => {\n    let i,\n        j,\n        temp;\n    for (i = arr.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n    }\n    return arr;\n};\n\nclass GameBody extends Component {\n    state = {\n        win: false,\n        playAgainBtn: false,\n        score: [],\n        topScore: 0,\n        gameOver: false,\n        whichImages: [{\n            key: 0,\n            url: Pic0\n        }, {\n            key: 1,\n            url: Pic1\n        }, {\n            key: 2,\n            url: Pic2\n        }, {\n            key: 3,\n            url: Pic3\n        }, {\n            key: 4,\n            url: Pic4\n        }, {\n            key: 5,\n            url: Pic5\n        }, {\n            key: 6,\n            url: Pic6\n        }, {\n            key: 7,\n            url: Pic7\n        }, {\n            key: 8,\n            url: Pic8\n        }],\n        pic0: false,\n        pic1: false,\n        pic2: false,\n        pic3: false,\n        pic4: false,\n        pic5: false,\n        pic6: false,\n        pic7: false,\n        pic8: false\n    }\n\n    scramble = (event) => {\n        let score = this.state.score\n        console.log(this.state.score)\n        event ? (score.includes(event.target.name) ?\n            this.setState({ gameOver: true }) : score.push(event.target.name)) : event = undefined\n        let newArr = scrambleArray(this.state.whichImages)\n        event ?\n            this.setState({\n                whichImages: newArr,\n                [event.target.name]: true,\n                score: score\n            }) :\n            this.setState({\n                whichImages: newArr\n            })\n        if (this.state.score.length === 9) {\n            let topScore = this.state.topScore + 1\n            this.setState({\n                topScore: topScore,\n                score: [],\n                win: true,\n                gameOver: true\n            })\n        }\n    }\n\n    playAgain = () => {\n        this.setState({\n            score: [],\n            gameOver: false,\n            playAgainBtn: false,\n            win: false\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"GameBody\">\n                <Counter\n                    gameOver={this.state.gameOver}\n                    playAgain={this.playAgain}\n                    score={this.state.score}\n                    topScore={this.state.topScore} />\n                <main className=\"GameMain\">\n                    {this.state.gameOver ? (this.state.win ?\n                        <YouWon /> : <YouLost />)\n                        : <SwitchPics\n                            whichImages={this.state.whichImages}\n                            scramble={this.scramble}\n                        />}\n                </main>\n            </div>\n        );\n    }\n}\n\n\nexport default GameBody;","import React, { Component } from 'react';\nimport './App.css';\nimport GameBody from './Components/GameBody';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Clicky Game</h1> \n          <h1>Star Trek Style</h1>\n        <p className=\"App-intro\">\n          Click on each image <span style={{fontWeight: 'bolder'}}>ONLY</span> once. Sound easy?  Wait until they start shifting around!\n        </p>\n        </header>\n      <GameBody />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}